type User struct {
	ID       int    `json:"id"`
	Username string `json:"username"`
	Password string `json:"-"` // Password is never sent in JSON responses
}

type Workspace struct {
	ID        int      `json:"id"`
	Name      string   `json:"name"`
	UserID    int      `json:"user_id"`
	Subdomain string   `json:"subdomain"`
	IPs       []string `json:"ips"`
}

type App struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	GitHash     string `json:"git_hash"`
	IPPort      string `json:"ip_port"`
	Endpoint    string `json:"endpoint"`
	Version     string `json:"version"`
	WorkspaceID int    `json:"workspace_id"`
}

type WorkspaceRole struct {
	ID          int    `json:"id"`
	UserID      int    `json:"user_id"`
	Role        string `json:"role"`
	WorkspaceID int    `json:"workspace_id"`
}

type AppRole struct {
	ID     int    `json:"id"`
	UserID int    `json:"user_id"`
	Role   string `json:"role"`
	AppID  int    `json:"app_id"`
}

var (
	db         *sql.DB
	ipPool     *IPPool
	mutex      sync.Mutex
	subdomains map[string]bool
)

type IPPool struct {
	available []net.IP
	inUse     map[string]bool
	mutex     sync.Mutex
}
