func getWorkspaces(w http.ResponseWriter, r *http.Request) {
	rows, err := db.Query("SELECT id, name, user_id, subdomain, ips FROM workspaces")
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	defer rows.Close()

	workspaces := []Workspace{}
	for rows.Next() {
		var ws Workspace
		var ips string
		if err := rows.Scan(&ws.ID, &ws.Name, &ws.UserID, &ws.Subdomain, &ips); err != nil {
			http.Error(w, err.Error(), http.StatusInternalServerError)
			return
		}
		ws.IPs = strings.Split(ips, ",")
		workspaces = append(workspaces, ws)
	}

	json.NewEncoder(w).Encode(workspaces)
}

