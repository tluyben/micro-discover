func TestGetApps(t *testing.T) {
	setUpTestEnvironment()
	defer tearDownTestEnvironment()

	// Insert a test app
	_, err := db.Exec("INSERT INTO apps (name, description, git_hash, ip_port, endpoint, version, workspace_id) VALUES (?, ?, ?, ?, ?, ?, ?)",
		"testapp", "Test app", "abcdef", "10.0.0.1:8080", "/api", "1.0", 1)
	if err != nil {
		t.Fatal(err)
	}

	req, err := http.NewRequest("GET", "/apps", nil)
	if err != nil {
		t.Fatal(err)
	}

	rr := httptest.NewRecorder()
	router := mux.NewRouter()
	router.HandleFunc("/apps", getApps).Methods("GET")
	router.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusOK)
	}

	var response []App
	err = json.Unmarshal(rr.Body.Bytes(), &response)
	if err != nil {
		t.Fatal(err)
	}

	if len(response) != 1 {
		t.Errorf("handler returned unexpected number of apps: got %v want %v", len(response), 1)
	}
}
