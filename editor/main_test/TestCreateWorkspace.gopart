func TestCreateWorkspace(t *testing.T) {
	setUpTestEnvironment()
	defer tearDownTestEnvironment()

	requestBody := []byte(`{"name":"testworkspace","user_id":1}`)
	req, err := http.NewRequest("POST", "/workspaces", bytes.NewBuffer(requestBody))
	if err != nil {
		t.Fatal(err)
	}

	rr := httptest.NewRecorder()
	router := mux.NewRouter()
	router.HandleFunc("/workspaces", createWorkspace).Methods("POST")
	router.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusCreated {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusCreated)
	}

	var response Workspace
	err = json.Unmarshal(rr.Body.Bytes(), &response)
	if err != nil {
		t.Fatal(err)
	}

	if response.Name != "testworkspace" {
		t.Errorf("handler returned unexpected workspace name: got %v want %v", response.Name, "testworkspace")
	}
}
